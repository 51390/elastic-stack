version: '3.8'

services:

    elasticsearch:
        build:
            context: custom/elasticsearch
            network: host
            args:
                - ELASTICSEARCH_VERSION=${ELASTICSEARCH_VERSION:-8.9.0}
        env_file: .env_elasticsearch_${ENV_FILE_VERSION:-8}
        environment:
            - node.name=es-stack-1
            - cluster.initial_master_nodes=es-stack-1
            - xpack.security.enabled=false
            - xpack.security.enrollment.enabled=false
              #- ELASTIC_USERNAME=admin
              #- ELASTIC_PASSWORD=elastic
        ports:
            - "${ELASTICSEARCH_PORT:-9200}:9200"
        networks:
          stack:
            aliases:
              - es-stack-1

        volumes:
            - type: bind
              source: ../snapshots
              target: /snapshots

    kibana:
        image: docker.elastic.co/kibana/kibana:${KIBANA_VERSION:-8.9.0}
        env_file: .env_kibana_${ENV_FILE_VERSION:-8}
        environment:
            - ELASTICSEARCH_HOSTS="http://elasticsearch:9200"
        ports:
            - "${KIBANA_PORT:-5601}:5601"
        depends_on:
            - elasticsearch
        networks:
            - stack

    logstash-data-loader:
        build:
            context: custom/logstash-data-loader
            network: host
            args:
                - LOGSTASH_VERSION=${LOGSTASH_VERSION:-8.9.0}
        env_file: .env_logstash-data-loader_${ENV_FILE_VERSION:-8}
        ports:
            - "${LOGSTASH_PORT:-9600}:9600"
        depends_on:
            - elasticsearch
        networks:
            - stack
        volumes:
            - ../data:/data


    es-loader:
        build:
            context: custom/es-loader
            network: host
        depends_on:
            - elasticsearch
        networks:
            - stack
        volumes:
            - ../index-templates:/index-templates
            - ../bin:/stack-bin
        command: bash /stack-bin/init.sh /index-templates elasticsearch

networks:
    stack:
